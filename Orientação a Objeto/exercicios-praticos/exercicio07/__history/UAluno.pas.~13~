unit UAluno;

interface

type
  TArray =  array[1..2] of double;
  TAluno = class
    private
    FMatricula : String;
    FNome : String;
    FNotas : TArray;
    FNotaTrabalho : Double;
    function GetMatricula: String;
    function GetNome: String;
    procedure SetMatricula(const Value: String);
    procedure SetNome(const Value: String);
    function GetNotas: TArray;
    function GetNotaTrabalho: Double;
    procedure SetNotas(const Value: TArray);
    procedure SetNotaTrabalho(const Value: Double);
    public

    property Matricula : String    read GetMatricula    write SetMatricula;
    property Nome : String         read GetNome         write SetNome;
    property Notas : TArray        read GetNotas        write SetNotas;
    property NotaTrabalho : Double read GetNotaTrabalho write SetNotaTrabalho;

  end;

implementation

{ TAluno }

function TAluno.GetMatricula: String;
begin

end;

function TAluno.GetNotas: TArray;
begin

end;

function TAluno.GetNotaTrabalho: Double;
begin

end;

procedure TAluno.SetMatricula(const Value: String);
begin

end;

procedure TAluno.SetNotas(const Value: TArray);
begin

end;

procedure TAluno.SetNotaTrabalho(const Value: Double);
begin

end;

end.
