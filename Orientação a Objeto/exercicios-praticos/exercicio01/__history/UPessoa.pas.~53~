unit UPessoa;

interface

type
  Tpessoa = class
    private
      FNome: String;
      FIdade: Byte;
      FNascimento: Tdate;
      Faltura : Double;

    function GetNome : String;
    procedure SetNome(const Value : String);

    function GetIdade : Double;
    procedure SetIdade(const Value : Double);

    function GetNascimento : TDate;
    procedure SetNascimento (const Value: TDate);

    function GetAltura : Double;
    procedure SetAltura (const Value: Double);

    public

    function ImprimirDados : String;

    property Nome : String read  GetNome write SetNome;
    property Idade: Double read GetIdade write SetIdade;
    property Nascimento: Tdate read GetNascimento write SetNascimento;
    property Altura: Double read GetAltura write SetAltura;
  end;

implementation

uses
  System.SysUtils;

{ Tpessoa }

{ FAltura }
function Tpessoa.GetAltura: Double;
begin
  result := FAltura;
end;

procedure Tpessoa.SetAltura(const Value: Double);
begin
  FAltura := Value;
end;

{ FIdade }
function Tpessoa.getIdade: Double;
begin
  result := FIdade;
end;

procedure Tpessoa.SetIdade(const Value: Double);
begin
  FIdade := value;
end;

{ FNascimento }

function Tpessoa.GetNascimento: TDate;
begin
  result := fNascimento;
end;

procedure Tpessoa.SetNascimento(const Value: TDate);
begin
  FNascimento := Value;
end;

{ FNome }

function Tpessoa.GetNome: String;
begin
  result := Fnome;
end;

procedure Tpessoa.SetNome(const Value: String);
begin
  FNome := Value;
end;

{Imprimir Dados}

function Tpessoa.ImprimirDados:String;
begin
  result := 'Nome: ' + self.Nome + SlineBreak +
            'Idade: ' +   FloatToStr(( Date - (self.FNascimento)) / 365.25) + SlineBreak +
            'Data de Nascimento: ' + DateToStr(self.FNascimento) + SlineBreak +
            'Altura' + FloatToStr(self.Faltura);
end;

end.
