unit TestUCalculadora;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, UCalculadora;

type
  // Test methods for class Tcalculadora

  TestTcalculadora = class(TTestCase)
  strict private
    Fcalculadora: Tcalculadora;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestSomar;
    procedure TestSubtrair;
    procedure TestMultiplicar;
    procedure TestDividir;
  end;

implementation

procedure TestTcalculadora.SetUp;
begin
  Fcalculadora := Tcalculadora.Create;
end;

procedure TestTcalculadora.TearDown;
begin
  Fcalculadora.Free;
  Fcalculadora := nil;
end;

procedure TestTcalculadora.TestSomar;
var
  ReturnValue: Double;
  aNum2: Double;
  aNum1: Double;
begin
  aNum1 := 1;
  aNUm2 := 2;
  // TODO: Setup method call parameters
  ReturnValue := Fcalculadora.Somar(aNum1, aNum2);
  CheckEquals(3, ReturnValue, 'Erro no método Somar');
  // TODO: Validate method results
end;

procedure TestTcalculadora.TestSubtrair;
var
  ReturnValue: Double;
  aNum2: Double;
  aNum1: Double;
begin
  aNum1 := 1;
  anum2 := 2;
  // TODO: Setup method call parameters
  ReturnValue := Fcalculadora.Subtrair(aNum1, aNum2);
  CheckEquals(-1,ReturnValue, 'Erro no método Subtrair')
  // TODO: Validate method results
end;

procedure TestTcalculadora.TestMultiplicar;
var
  ReturnValue: Double;
  aNum2: Double;
  aNum1: Double;
begin
  aNum1 := 2;
  aNum2 := 3;
  // TODO: Setup method call parameters
  ReturnValue := Fcalculadora.Multiplicar(aNum1, aNum2);
  CheckEquals(6, ReturnValue, 'Erro no método Multiplicar')
  // TODO: Validate method results
end;

procedure TestTcalculadora.TestDividir;
var
  ReturnValue: Double;
  aNum2: Double;
  aNum1: Double;
begin
  aNum1 := 4;
  aNum2 := 2;
  // TODO: Setup method call parameters
  ReturnValue := Fcalculadora.Dividir(aNum1, aNum2);
  CheckEquals(1, ReturnValue, 'Erro no método Dividir')
  // TODO: Validate method results
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTcalculadora.Suite);
end.

