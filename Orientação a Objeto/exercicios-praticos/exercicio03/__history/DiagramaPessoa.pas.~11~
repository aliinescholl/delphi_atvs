unit DiagramaPessoa;

interface

type
  TPessoa = class
  private
    FNome: String;
    FEndereco: String;
    function GetNome: String;
    procedure SetNome(const Value: String);
  public
    procedure Gravar(aPessoa: TPessoa);
    property Nome : String read GetNome write SetNome;
    property Endereco : String read GetNome write SetNome;
  end;

  TPessoaFisica = class(TPessoa)
  private
    FCPF: String;
    FIdade: Byte;
    function GetCpf: String;
    function GetIdade: Integer;
    procedure SetCpf(const Value: String);
    procedure SetIdade(const Value: Integer);
  public
    function CPF_Valido : Boolean;
    property Cpf : String read GetCpf write SetCpf;
    property Idade : Integer read GetIdade write SetIdade;
  end;

  TPessoaJuridica = class(TPessoa)
  private
    FCNPJ, FIE : String;
    function GetCnpj: String;
    function GetIe: String;
    procedure setCnpj(const Value: String);
    procedure SetIe(const Value: String);
  public
    function CNPJ_Valido : Boolean;
    property Cnpj : String read GetCnpj write setCnpj;
    property Ie : String read GetIe write SetIe;
  end;

implementation

{ TPessoa }

function TPessoa.GetNome: String;
begin

end;

procedure TPessoa.Gravar(aPessoa: TPessoa);
begin

end;

procedure TPessoa.SetNome(const Value: String);
begin

end;

{ TPessoaFisica }

function TPessoaFisica.CPF_Valido: Boolean;
begin

end;

function TPessoaFisica.GetCpf: String;
begin

end;

function TPessoaFisica.GetIdade: Integer;
begin

end;

procedure TPessoaFisica.SetCpf(const Value: String);
begin

end;

procedure TPessoaFisica.SetIdade(const Value: Integer);
begin

end;

{ TPessoaJuridica }

function TPessoaJuridica.CNPJ_Valido: Boolean;
begin

end;

function TPessoaJuridica.GetCnpj: String;
begin

end;

function TPessoaJuridica.GetIe: String;
begin

end;

procedure TPessoaJuridica.setCnpj(const Value: String);
begin

end;

procedure TPessoaJuridica.SetIe(const Value: String);
begin

end;

end.
